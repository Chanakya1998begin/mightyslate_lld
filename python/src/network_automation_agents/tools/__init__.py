"""Tool implementations for network automation agents."""

from importlib import import_module
from typing import Any, Dict, Tuple

__all__ = [
    "DelegationInput",
    "TaskDelegationTool",
    "ITSMIntegrationTool",
    "NetworkInteractionToolset",
    "NLIParserTool",
    "AnomalyDetectionTool",
    "AnomalyDetectionInput",
    "PredictiveMaintenanceTool",
    "PredictiveMaintenanceInput",
    "FailurePrediction",
    "RCACorrelationTool",
    "GNMISubscriptionTool",
    "TelemetrySubscription",
    "SNMPPollingTool",
    "SNMPPollingJob",
    "SyslogIngestionTool",
    "SyslogEndpoint",
    "FlowCollectorTool",
    "FlowCollectorConfig",
    "DeviceInventoryTool",
    "LLDPNeighborDiscoveryTool",
    "NSOTUpdateTool",
    "NSOTQueryTool",
    "CVELookupTool",
    "LifecycleStatusRecord",
    "EoLEOSCheckTool",
    "PatchingStepResult",
    "PatchingWorkflowReport",
    "AutomatedPatchingWorkflowTool",
    "TSDBQueryTool",
    "TimeSeriesDataPoint",
    "TimeSeriesResult",
    "TSDBQueryOutput",
    "OpticalDiagnosticsTool",
    "OpticalLaneDiagnostics",
    "OpticalDiagnosticsOutput",
    "RoutingHealthTool",
    "BGPPeer",
    "BGPHealthOutput",
    "SyntheticProbeManagementTool",
    "SyntheticProbeRequest",
    "SyntheticProbeStatus",
    "VersionControlTool",
    "ConfigBackupTool",
    "ConfigBackupResult",
    "ConfigDriftDetectionTool",
    "ConfigDriftOutput",
    "ComplianceAuditTool",
    "ComplianceRule",
    "ComplianceViolation",
    "ComplianceReport",
    "FlowAnalysisTool",
    "FlowAnalysisResult",
    "FlowAggregate",
    "LogAnalysisTool",
    "LogQueryResult",
    "LogEvent",
    "ThreatIntelligenceTool",
    "IPReputation",
    "RemediationActionTool",
    "SecurityActionResult",
    "MaintenanceSchedulerTool",
    "MaintenanceScheduleResult",
]

_LAZY_IMPORTS: Dict[str, Tuple[str, str]] = {
    "DelegationInput": ("network_automation_agents.tools.delegation", "DelegationInput"),
    "TaskDelegationTool": ("network_automation_agents.tools.delegation", "TaskDelegationTool"),
    "ITSMIntegrationTool": ("network_automation_agents.tools.itsm", "ITSMIntegrationTool"),
    "NetworkInteractionToolset": (
        "network_automation_agents.tools.network_interaction",
        "NetworkInteractionToolset",
    ),
    "NLIParserTool": ("network_automation_agents.tools.nli", "NLIParserTool"),
    "AnomalyDetectionTool": ("network_automation_agents.tools.analytics", "AnomalyDetectionTool"),
    "AnomalyDetectionInput": ("network_automation_agents.tools.analytics", "AnomalyDetectionInput"),
    "PredictiveMaintenanceTool": (
        "network_automation_agents.tools.analytics",
        "PredictiveMaintenanceTool",
    ),
    "PredictiveMaintenanceInput": (
        "network_automation_agents.tools.analytics",
        "PredictiveMaintenanceInput",
    ),
    "FailurePrediction": ("network_automation_agents.tools.analytics", "FailurePrediction"),
    "RCACorrelationTool": ("network_automation_agents.tools.rca", "RCACorrelationTool"),
    "GNMISubscriptionTool": ("network_automation_agents.tools.telemetry", "GNMISubscriptionTool"),
    "TelemetrySubscription": ("network_automation_agents.tools.telemetry", "TelemetrySubscription"),
    "SNMPPollingTool": ("network_automation_agents.tools.telemetry", "SNMPPollingTool"),
    "SNMPPollingJob": ("network_automation_agents.tools.telemetry", "SNMPPollingJob"),
    "SyslogIngestionTool": ("network_automation_agents.tools.telemetry", "SyslogIngestionTool"),
    "SyslogEndpoint": ("network_automation_agents.tools.telemetry", "SyslogEndpoint"),
    "FlowCollectorTool": ("network_automation_agents.tools.telemetry", "FlowCollectorTool"),
    "FlowCollectorConfig": ("network_automation_agents.tools.telemetry", "FlowCollectorConfig"),
    "DeviceInventoryTool": ("network_automation_agents.tools.discovery", "DeviceInventoryTool"),
    "LLDPNeighborDiscoveryTool": ("network_automation_agents.tools.discovery", "LLDPNeighborDiscoveryTool"),
    "NSOTUpdateTool": ("network_automation_agents.tools.discovery", "NSOTUpdateTool"),
    "NSOTQueryTool": ("network_automation_agents.tools.lifecycle", "NSOTQueryTool"),
    "CVELookupTool": ("network_automation_agents.tools.lifecycle", "CVELookupTool"),
    "LifecycleStatusRecord": ("network_automation_agents.tools.lifecycle", "LifecycleStatusRecord"),
    "EoLEOSCheckTool": ("network_automation_agents.tools.lifecycle", "EoLEOSCheckTool"),
    "PatchingStepResult": ("network_automation_agents.tools.lifecycle", "PatchingStepResult"),
    "PatchingWorkflowReport": ("network_automation_agents.tools.lifecycle", "PatchingWorkflowReport"),
    "AutomatedPatchingWorkflowTool": (
        "network_automation_agents.tools.lifecycle",
        "AutomatedPatchingWorkflowTool",
    ),
    "TSDBQueryTool": ("network_automation_agents.tools.performance", "TSDBQueryTool"),
    "TimeSeriesDataPoint": ("network_automation_agents.tools.performance", "TimeSeriesDataPoint"),
    "TimeSeriesResult": ("network_automation_agents.tools.performance", "TimeSeriesResult"),
    "TSDBQueryOutput": ("network_automation_agents.tools.performance", "TSDBQueryOutput"),
    "OpticalDiagnosticsTool": ("network_automation_agents.tools.performance", "OpticalDiagnosticsTool"),
    "OpticalLaneDiagnostics": ("network_automation_agents.tools.performance", "OpticalLaneDiagnostics"),
    "OpticalDiagnosticsOutput": ("network_automation_agents.tools.performance", "OpticalDiagnosticsOutput"),
    "RoutingHealthTool": ("network_automation_agents.tools.performance", "RoutingHealthTool"),
    "BGPPeer": ("network_automation_agents.tools.performance", "BGPPeer"),
    "BGPHealthOutput": ("network_automation_agents.tools.performance", "BGPHealthOutput"),
    "SyntheticProbeManagementTool": (
        "network_automation_agents.tools.performance",
        "SyntheticProbeManagementTool",
    ),
    "SyntheticProbeRequest": ("network_automation_agents.tools.performance", "SyntheticProbeRequest"),
    "SyntheticProbeStatus": ("network_automation_agents.tools.performance", "SyntheticProbeStatus"),
    "VersionControlTool": ("network_automation_agents.tools.configuration", "VersionControlTool"),
    "ConfigBackupTool": ("network_automation_agents.tools.configuration", "ConfigBackupTool"),
    "ConfigBackupResult": ("network_automation_agents.tools.configuration", "ConfigBackupResult"),
    "ConfigDriftDetectionTool": (
        "network_automation_agents.tools.configuration",
        "ConfigDriftDetectionTool",
    ),
    "ConfigDriftOutput": ("network_automation_agents.tools.configuration", "ConfigDriftOutput"),
    "ComplianceAuditTool": ("network_automation_agents.tools.configuration", "ComplianceAuditTool"),
    "ComplianceRule": ("network_automation_agents.tools.configuration", "ComplianceRule"),
    "ComplianceViolation": ("network_automation_agents.tools.configuration", "ComplianceViolation"),
    "ComplianceReport": ("network_automation_agents.tools.configuration", "ComplianceReport"),
    "FlowAnalysisTool": ("network_automation_agents.tools.security", "FlowAnalysisTool"),
    "FlowAnalysisResult": ("network_automation_agents.tools.security", "FlowAnalysisResult"),
    "FlowAggregate": ("network_automation_agents.tools.security", "FlowAggregate"),
    "LogAnalysisTool": ("network_automation_agents.tools.security", "LogAnalysisTool"),
    "LogQueryResult": ("network_automation_agents.tools.security", "LogQueryResult"),
    "LogEvent": ("network_automation_agents.tools.security", "LogEvent"),
    "ThreatIntelligenceTool": ("network_automation_agents.tools.security", "ThreatIntelligenceTool"),
    "IPReputation": ("network_automation_agents.tools.security", "IPReputation"),
    "RemediationActionTool": ("network_automation_agents.tools.security", "RemediationActionTool"),
    "SecurityActionResult": (
        "network_automation_agents.tools.security",
        "SecurityActionResult",
    ),
    "MaintenanceSchedulerTool": ("network_automation_agents.tools.maintenance", "MaintenanceSchedulerTool"),
    "MaintenanceScheduleResult": (
        "network_automation_agents.tools.maintenance",
        "MaintenanceScheduleResult",
    ),
}


def __getattr__(name: str) -> Any:  # pragma: no cover - simple delegation
    if name not in _LAZY_IMPORTS:
        raise AttributeError(f"module 'network_automation_agents.tools' has no attribute {name!r}")
    module_name, attr_name = _LAZY_IMPORTS[name]
    module = import_module(module_name)
    attr = getattr(module, attr_name)
    globals()[name] = attr
    return attr
